{"version":3,"sources":["Calculator.test.js"],"names":["Enzyme","configure","adapter","Adapter","describe","it","wrapper","display","find","text","expect","toEqual","i","button","simulate","console","log"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAGAA,gBAAOC,SAAP,CAAiB;AAAEC,EAAAA,OAAO,EAAE,IAAIC,2BAAJ;AAAX,CAAjB;;AAEAC,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AAEnCC,EAAAA,EAAE,CAAC,wCAAD,EAA2C,MAAM;AAC/C,UAAMC,OAAO,GAAG,qBAAQ,6BAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAAhB;AACA,UAAMC,OAAO,GAAGD,OAAO,CAACE,IAAR,CAAa,UAAb,EAAyBC,IAAzB,EAAhB;AAEAC,IAAAA,MAAM,CAACH,OAAD,CAAN,CAAgBI,OAAhB,CAAwB,GAAxB;AACH,GALC,CAAF;AAOAN,EAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM;AAClC,UAAMC,OAAO,GAAG,qBAAQ,6BAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAAhB;AACA,UAAMC,OAAO,GAAGD,OAAO,CAACE,IAAR,CAAa,UAAb,EAAyBC,IAAzB,EAAhB;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,UAAIC,MAAM,GAAGP,OAAO,CAACE,IAAR,CAAa,OAAKI,CAAlB,CAAb;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgB,OAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACJ,IAAP,EAAZ;AACH;;AACD,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,UAAIC,MAAM,GAAGP,OAAO,CAACE,IAAR,CAAa,OAAKI,CAAlB,CAAb;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgB,OAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACJ,IAAP,EAAZ;AACH;;AACD,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,UAAIC,MAAM,GAAGP,OAAO,CAACE,IAAR,CAAa,OAAKI,CAAlB,CAAb;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgB,OAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACJ,IAAP,EAAZ;AACH;;AACDC,IAAAA,MAAM,CAACH,OAAD,CAAN,CAAgBI,OAAhB,CAAwB,GAAxB;AACH,GApBC,CAAF;AAqBH,CA9BO,CAAR","sourcesContent":["import Calculator from './Calculator';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Enzyme from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport { shallow } from 'enzyme';\n\nEnzyme.configure({ adapter: new Adapter() });\n\ndescribe('Calculator component', () => {\n\n    it('The first displayed number should be 0', () => {\n        const wrapper = shallow(<Calculator/>);\n        const display = wrapper.find('.display').text();\n\n        expect(display).toEqual('0');\n    });\n\n    it('Checking all numbers work', () => {\n        const wrapper = shallow(<Calculator/>);\n        const display = wrapper.find('.display').text();\n\n        for (let i = 0; i < 9; i++) {\n            let button = wrapper.find('.b'+i);\n            button.simulate('click');\n            console.log(button.text());\n        }\n        for (let i = 0; i < 9; i++) {\n            let button = wrapper.find('.b'+i);\n            button.simulate('click');\n            console.log(button.text());\n        }\n        for (let i = 0; i < 9; i++) {\n            let button = wrapper.find('.b'+i);\n            button.simulate('click');\n            console.log(button.text());\n        }\n        expect(display).toEqual('7');\n    });\n});\n"]}
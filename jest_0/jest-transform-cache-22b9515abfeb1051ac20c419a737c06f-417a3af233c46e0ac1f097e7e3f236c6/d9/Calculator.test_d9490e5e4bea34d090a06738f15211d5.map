{"version":3,"sources":["Calculator.test.js"],"names":["Enzyme","configure","adapter","Adapter","describe","it","tree","renderer","create","toJSON","expect","toMatchSnapshot","wrapper","display","find","text","toEqual","i","simulate","console","log","setTimeout"],"mappings":"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","sourcesContent":["import Calculator from './Calculator';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Enzyme from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport { shallow } from 'enzyme';\nimport renderer from 'react-test-renderer';\n\nEnzyme.configure({ adapter: new Adapter() });\n\ndescribe('Calculator component', () => {\n\n    it('Matches the snapshot', () => {\n        const tree = renderer.create(<Calculator/>).toJSON();\n        expect(tree).toMatchSnapshot();\n    });\n\n    it('The first displayed number should be 0', () => {\n        const wrapper = shallow(<Calculator/>);\n        const display = wrapper.find('.display').text();\n        expect(display).toEqual('0');\n    });\n\n\n    it('All numbers buttons work', () => {\n        const wrapper = shallow(<Calculator/>);\n\n        for (var i = 0; i <= 9; i++) {\n            wrapper.find('.b'+i).simulate('click');\n        }\n        console.log('eeeh', wrapper.find('.display').text() === '123465789');\n        expect(wrapper.find('.display').text()).toEqual('123465789');\n\n    });\n\n    it('Button 0 inputs only once', () => {\n        const wrapper = shallow(<Calculator/>);\n\n        for (var i = 0; i < 100; i++) {\n            wrapper.find('.b0').simulate('click');\n        }\n\n        setTimeout(()=> {\n            expect(wrapper.find('.display').text()).toEqual('0');\n        }, 1000);\n    });\n\n\n    it('Point inputs only once', () => {\n        const wrapper = shallow(<Calculator/>);\n        const display = wrapper.find('.display').text();\n\n        wrapper.find('.point').simulate('click');\n        for (let i = 0; i < 100; i++) {\n            if (i == 0 || i == 50) {\n                wrapper.find('.b1').simulate('click');\n            }else{\n                wrapper.find('.point').simulate('click');\n            }\n        }\n\n        setTimeout(()=> {\n            expect(display).toEqual('1.1');\n        }, 1000);\n    });\n\n    it('Multiplication works properly', () => {\n        const wrapper = shallow(<Calculator/>);\n        const display = wrapper.find('.display').text();\n\n        for (let i = 1; i <= 9; i++) {\n\n            wrapper.find('.b'+i).simulate('click');\n            wrapper.find('.multiplication').simulate('click');\n        }\n\n        setTimeout(()=> {\n            expect(display).toEqual('362880');\n        }, 1000);\n    });\n\n    it('Addition works properly', () => {\n        const wrapper = shallow(<Calculator/>);\n        const display = wrapper.find('.display').text();\n\n        for (let i = 1; i <= 9; i++) {\n\n            wrapper.find('.b'+i).simulate('click');\n            wrapper.find('.addition').simulate('click');\n        }\n\n        setTimeout(()=> {\n            expect(display).toEqual('45');\n        }, 1000);\n    });\n\n\n    it('Substraction works properly', () => {\n        const wrapper = shallow(<Calculator/>);\n        const display = wrapper.find('.display').text();\n\n        wrapper.find('.b8').simulate('click');\n        wrapper.find('.b7').simulate('click');\n\n        for (let i = 0; i <= 9; i++) {\n\n            wrapper.find('.subtraction').simulate('click');\n            wrapper.find('.b'+i).simulate('click');\n        }\n        wrapper.find('.equals').simulate('click');\n\n        setTimeout(()=> {\n            expect(display).toEqual('42');\n        }, 1000);\n    });\n\n    it('Button equals works properly', () => {\n        const wrapper = shallow(<Calculator/>);\n        const display = wrapper.find('.display').text();\n\n        wrapper.find('.b8').simulate('click');\n        wrapper.find('.b7').simulate('click');\n\n        for (let i = 0; i <= 9; i++) {\n\n            wrapper.find('.subtraction').simulate('click');\n            wrapper.find('.b'+i).simulate('click');\n        }\n\n        setTimeout(()=> {\n            expect(display).toEqual('42');\n        }, 1000);\n    });\n});\n"]}
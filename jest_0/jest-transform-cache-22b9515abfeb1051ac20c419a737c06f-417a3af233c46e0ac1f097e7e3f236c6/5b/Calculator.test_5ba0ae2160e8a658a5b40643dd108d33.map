{"version":3,"sources":["Calculator.test.js"],"names":["Enzyme","configure","adapter","Adapter","describe","it","tree","renderer","create","toJSON","expect","toMatchSnapshot","wrapper","beforeEach","find","text","toEqual","i","simulate"],"mappings":"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","sourcesContent":["import Calculator from './Calculator';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Enzyme from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport { shallow } from 'enzyme';\nimport renderer from 'react-test-renderer';\n\nEnzyme.configure({ adapter: new Adapter() });\n\n\ndescribe('Calculator component snapshot', () => {\n\n    it('Matches the snapshot', () => {\n        const tree = renderer.create(<Calculator/>).toJSON();\n        expect(tree).toMatchSnapshot();\n    });\n});\n\n\ndescribe('Calculator component buttons and display', () => {\n\n\n    let wrapper;\n\n    beforeEach(() => {\n        wrapper = shallow(<Calculator/>);\n    })\n\n\n    it('The first displayed number should be 0', () => {\n        expect(\n            wrapper.find('.display').text()\n        ).toEqual('0');\n    });\n\n\n    it('All numbers buttons work', () => {\n\n        for (var i = 0; i <= 9; i++) {\n            wrapper.find('.b'+i).simulate('click');\n        }\n        wrapper.find('.b0').simulate('click');\n        expect(\n            wrapper.find('.display').text()\n        ).toEqual('1234567890');\n\n    });\n\n    it('Button 0 inputs only once', () => {\n\n        for (var i = 0; i < 100; i++) {\n            wrapper.find('.b0').simulate('click');\n        }\n\n        expect(\n            wrapper.find('.display').text()\n        ).toEqual('0');\n\n    });\n\n\n    it('Point inputs only once', () => {\n\n        for (let i = 0; i < 100; i++) {\n            if (i == 0 || i == 50) {\n                wrapper.find('.b1').simulate('click');\n            }else{\n                wrapper.find('.point').simulate('click');\n            }\n        }\n\n        expect(\n            wrapper.find('.display').text()\n        ).toEqual('1.1');\n\n    });\n\n    it('Point clicked at first time is added after zero', () => {\n\n        for (let i = 0; i < 100; i++) {\n            wrapper.find('.point').simulate('click');\n        }\n        wrapper.find('.b0').simulate('click');\n\n        expect(\n            wrapper.find('.display').text()\n        ).toEqual('0.0');\n\n    });\n\n    it('Multiplication works properly', () => {\n\n        for (let i = 1; i <= 9; i++) {\n\n            wrapper.find('.b'+i).simulate('click');\n            wrapper.find('.multiplication').simulate('click');\n        }\n\n        expect(\n            wrapper.find('.display').text()\n        ).toEqual('362880');\n\n    });\n\n    it('Addition works properly', () => {\n\n        for (let i = 1; i <= 9; i++) {\n\n            wrapper.find('.b'+i).simulate('click');\n            wrapper.find('.addition').simulate('click');\n        }\n\n\n        expect(\n            wrapper.find('.display').text()\n        ).toEqual('45');\n\n    });\n\n\n    it('Substraction and equals work properly', () => {\n\n        wrapper.find('.b8').simulate('click');\n        wrapper.find('.b7').simulate('click');\n\n        for (let i = 0; i <= 9; i++) {\n\n            wrapper.find('.subtraction').simulate('click');\n            wrapper.find('.b'+i).simulate('click');\n        }\n        wrapper.find('.equals').simulate('click');\n\n\n        expect(\n            wrapper.find('.display').text()\n        ).toEqual('42')\n    });\n\n    it('C (clear all) button works properly', () => {\n        const wrapper = shallow(<Calculator/>);\n\n        for (let i = 0; i <= 9; i++) {\n\n            wrapper.find('.addition').simulate('click');\n            wrapper.find('.b'+i).simulate('click');\n        }\n        wrapper.find('.equals').simulate('click');\n        wrapper.find('.clear-all').simulate('click');\n\n        expect(\n            wrapper.find('.display').text()\n        ).toEqual('0')\n    });\n});\n"]}
1f6ba5b74816780eb7a3fdddf459b24e
"use strict";

var _interopRequireDefault = require("/home/hermanschmidt/Desktop/calculator/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("/home/hermanschmidt/Desktop/calculator/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _Calculator = _interopRequireDefault(require("./Calculator"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _enzyme = _interopRequireWildcard(require("enzyme"));

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _jsxFileName = "/home/hermanschmidt/Desktop/calculator/src/components/Calculator/Calculator.test.js";

_enzyme.default.configure({
  adapter: new _enzymeAdapterReact.default()
});

describe('Calculator component snapshot', () => {
  it('Matches the snapshot', () => {
    const tree = _reactTestRenderer.default.create(_react.default.createElement(_Calculator.default, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 15
      },
      __self: void 0
    })).toJSON();

    expect(tree).toMatchSnapshot();
  });
});
describe('Calculator component buttons and display', () => {
  let wrapper;

  const displayOutput = () => {
    return wrapper.find('.display').text();
  };

  const click = node => {
    wrapper.find(node).simulate('click');
  };

  beforeEach(() => {
    wrapper = (0, _enzyme.shallow)(_react.default.createElement(_Calculator.default, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 33
      },
      __self: void 0
    }));
  });
  it('The first displayed number should be 0', () => {
    expect(displayOutput()).toEqual('0');
  });
  it('All numbers buttons work', () => {
    for (var i = 0; i <= 9; i++) {
      click('.b' + i);
    }

    click('.b0');
    expect(displayOutput()).toEqual('1234567890');
  });
  it('Button 0 inputs only once', () => {
    for (var i = 0; i < 100; i++) {
      click('.b0');
    }

    expect(displayOutput()).toEqual('0');
  });
  it('Point inputs only once', () => {
    for (let i = 0; i < 100; i++) {
      if (i == 0 || i == 50) {
        click('.b1');
      } else {
        click('.point');
      }
    }

    expect(displayOutput()).toEqual('1.1');
  });
  it('Point clicked at first time is added after zero', () => {
    for (let i = 0; i < 100; i++) {
      click('.point');
    }

    click('.b0');
    expect(displayOutput()).toEqual('0.0');
  });
  it('Multiplication works properly', () => {
    for (let i = 1; i <= 9; i++) {
      click('.b' + i);
      click('.multiplication');
    }

    expect(displayOutput()).toEqual('362880');
  });
  it('Addition works properly', () => {
    for (let i = 1; i <= 9; i++) {
      click('.b' + i);
      click('.addition');
    }

    expect(displayOutput()).toEqual('45');
  });
  it('Substraction and equals work properly', () => {
    click('.b8');
    click('.b7');

    for (let i = 0; i <= 9; i++) {
      click('.subtraction');
      click('.b' + i);
    }

    click('.equals');
    expect(displayOutput()).toEqual('42');
  });
  it('C (clear all) button works properly', () => {
    for (let i = 0; i <= 9; i++) {
      click('.addition');
      click('.b' + i);
    }

    click('.equals');
    click('.clear-all');
    expect(displayOutput()).toEqual('0');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
f3d9659a918c7aad6c61be42ebeca20b
"use strict";

var _interopRequireWildcard = require("/home/hermanschmidt/Desktop/calculator/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/hermanschmidt/Desktop/calculator/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _mathjs = _interopRequireDefault(require("mathjs"));

var _jsxFileName = "/home/hermanschmidt/Desktop/calculator/src/components/Calculator/Calculator.js";

class Calculator extends _react.Component {
  constructor() {
    super();
    this.state = {
      display: '0',
      //Number shown on the screen
      total: '0',
      //Result of previous operations
      operator: null,
      //Current operation
      displayingTotal: true //Self explanatory flag

    };
  }

  inputNumber(value) {
    /*
        If the previous number shown in the display screen
        was a result (a total), the new input number replaces it.
        Otherwise, the new input number is added
        as a new digit to it.
    */
    let display = value.toString();

    if (!this.state.displayingTotal || this.state.display !== '0') {}

    stringeredNumber: this.state.display + stringeredNumber;
    /*
        If the previous shown number, the new input number
        and the stored result equals to 0, then the component
        assumes the display is showing a result;
    */


    let displayingTotal = this.state.total === '0' && this.state.display === '0' && stringeredNumber === '0';
    /*
        The new input number is added as a new digit
        only if there's available space on the display.
    */

    display = display.split('.').join().length <= 11 ? display : this.state.display;
    this.setState({
      display: display,
      displayingTotal: displayingTotal
    });
  }

  inputPoint() {
    let display = this.state.display;

    if (display.indexOf('.') < 0) {
      display += '.';
    }

    this.setState({
      display: this.state.displayingTotal ? '0.' : display,
      displayingTotal: false
    });
  }

  inputOperator(operator) {
    let display;
    let previousResult = this.state.operator ? _mathjs.default.eval(this.state.total + this.state.operator + this.state.display) : this.state.total;
    let total = this.state.operator && !this.state.displayingTotal ? previousResult.toString() : this.state.display;

    if (isNaN(previousResult)) {
      display = 'Error';
    } else {
      display = total.substr(0, 11);
    }

    this.setState({
      display: display,
      total: total,
      operator: operator === '=' ? null : operator,
      displayingTotal: true
    });
  }

  clear(value) {
    if (value === 'all') {
      this.setState({
        display: '0',
        total: '0',
        operator: null,
        displayingTotal: true
      });
    } else if (value === 'entry') {
      this.setState({
        display: '0'
      });
    } else if (value === 'character' && this.state.display !== '0') {
      let display = this.state.display.substr(0, this.state.display.length - 1);
      this.setState({
        display: this.state.display.length > 1 && !isNaN(display) ? display : '0'
      });
    }
  }

  showAbout() {
    alert('\nCalculator:\nMade with â™¥ by Herman Schmidt\n');
  }

  render() {
    const inputNumber = this.inputNumber,
          inputPoint = this.inputPoint,
          inputOperator = this.inputOperator,
          clear = this.clear;
    return _react.default.createElement("div", {
      className: "calculator",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 134
      },
      __self: this
    }, _react.default.createElement("div", {
      className: "display",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 135
      },
      __self: this
    }, this.state.display), _react.default.createElement("div", {
      className: "buttons",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 139
      },
      __self: this
    }, _react.default.createElement("button", {
      onClick: inputNumber.bind(this, 7),
      className: "b7",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 140
      },
      __self: this
    }, "7"), _react.default.createElement("button", {
      onClick: inputNumber.bind(this, 8),
      className: "b8",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 146
      },
      __self: this
    }, "8"), _react.default.createElement("button", {
      onClick: inputNumber.bind(this, 9),
      className: "b9",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 152
      },
      __self: this
    }, "9"), _react.default.createElement("button", {
      onClick: inputOperator.bind(this, '/'),
      className: "division",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 158
      },
      __self: this
    }, "\xF7"), _react.default.createElement("button", {
      className: "special-button clear-all",
      onClick: clear.bind(this, 'all'),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 164
      },
      __self: this
    }, "C"), _react.default.createElement("button", {
      onClick: inputNumber.bind(this, 4),
      className: "b4",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 170
      },
      __self: this
    }, "4"), _react.default.createElement("button", {
      onClick: inputNumber.bind(this, 5),
      className: "b5",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 176
      },
      __self: this
    }, "5"), _react.default.createElement("button", {
      onClick: inputNumber.bind(this, 6),
      className: "b6",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 182
      },
      __self: this
    }, "6"), _react.default.createElement("button", {
      onClick: inputOperator.bind(this, '*'),
      className: "multiplication",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 188
      },
      __self: this
    }, "\xD7"), _react.default.createElement("button", {
      className: "special-button clear-entry",
      onClick: clear.bind(this, 'entry'),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 194
      },
      __self: this
    }, "CE"), _react.default.createElement("button", {
      onClick: inputNumber.bind(this, 1),
      className: "b1",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 200
      },
      __self: this
    }, "1"), _react.default.createElement("button", {
      onClick: inputNumber.bind(this, 2),
      className: "b2",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 206
      },
      __self: this
    }, "2"), _react.default.createElement("button", {
      onClick: inputNumber.bind(this, 3),
      className: "b3",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 212
      },
      __self: this
    }, "3"), _react.default.createElement("button", {
      onClick: inputOperator.bind(this, '-'),
      className: "substraction",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 218
      },
      __self: this
    }, "-"), _react.default.createElement("button", {
      className: "special-button delete",
      onClick: clear.bind(this, 'character'),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 224
      },
      __self: this
    }, "DEL"), _react.default.createElement("button", {
      onClick: inputNumber.bind(this, 0),
      className: "b0",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 230
      },
      __self: this
    }, "0"), _react.default.createElement("button", {
      onClick: inputPoint.bind(this),
      className: "point",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 236
      },
      __self: this
    }, "."), _react.default.createElement("button", {
      onClick: inputOperator.bind(this, '='),
      className: "equals",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 242
      },
      __self: this
    }, "="), _react.default.createElement("button", {
      onClick: inputOperator.bind(this, '+'),
      className: "addition",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 248
      },
      __self: this
    }, "+"), _react.default.createElement("button", {
      className: "special-button about",
      onClick: this.showAbout,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 254
      },
      __self: this
    }, "A")));
  }

}

var _default = Calculator;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhbGN1bGF0b3IuanMiXSwibmFtZXMiOlsiQ2FsY3VsYXRvciIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwic3RhdGUiLCJkaXNwbGF5IiwidG90YWwiLCJvcGVyYXRvciIsImRpc3BsYXlpbmdUb3RhbCIsImlucHV0TnVtYmVyIiwidmFsdWUiLCJ0b1N0cmluZyIsInN0cmluZ2VyZWROdW1iZXIiLCJzcGxpdCIsImpvaW4iLCJsZW5ndGgiLCJzZXRTdGF0ZSIsImlucHV0UG9pbnQiLCJpbmRleE9mIiwiaW5wdXRPcGVyYXRvciIsInByZXZpb3VzUmVzdWx0IiwibWF0aCIsImV2YWwiLCJpc05hTiIsInN1YnN0ciIsImNsZWFyIiwic2hvd0Fib3V0IiwiYWxlcnQiLCJyZW5kZXIiLCJiaW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsTUFBTUEsVUFBTixTQUF5QkMsZ0JBQXpCLENBQW1DO0FBRS9CQyxFQUFBQSxXQUFXLEdBQUU7QUFDVDtBQUNBLFNBQUtDLEtBQUwsR0FBYTtBQUNUQyxNQUFBQSxPQUFPLEVBQUUsR0FEQTtBQUNjO0FBQ3ZCQyxNQUFBQSxLQUFLLEVBQUUsR0FGRTtBQUVjO0FBQ3ZCQyxNQUFBQSxRQUFRLEVBQUUsSUFIRDtBQUdjO0FBQ3ZCQyxNQUFBQSxlQUFlLEVBQUUsSUFKUixDQUljOztBQUpkLEtBQWI7QUFNSDs7QUFFREMsRUFBQUEsV0FBVyxDQUFFQyxLQUFGLEVBQVM7QUFFaEI7Ozs7OztBQU1BLFFBQUlMLE9BQU8sR0FBR0ssS0FBSyxDQUFDQyxRQUFOLEVBQWQ7O0FBQ0EsUUFBRyxDQUFDLEtBQUtQLEtBQUwsQ0FBV0ksZUFBWixJQUErQixLQUFLSixLQUFMLENBQVdDLE9BQVgsS0FBdUIsR0FBekQsRUFBNkQsQ0FFNUQ7O0FBQ0dPLElBQUFBLGdCQUFnQixFQUFHLEtBQUtSLEtBQUwsQ0FBV0MsT0FBWCxHQUFxQk8sZ0JBQXJCO0FBRXZCOzs7Ozs7O0FBS0EsUUFBSUosZUFBZSxH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LENBQXZCLENBRGI7QUFFSSxNQUFBLFNBQVMsRUFBQyxJQUZkO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFdBM0ZKLEVBaUdJO0FBQ0ksTUFBQSxPQUFPLEVBQUVaLFVBQVUsQ0FBQ1ksSUFBWCxDQUFnQixJQUFoQixDQURiO0FBRUksTUFBQSxTQUFTLEVBQUMsT0FGZDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxXQWpHSixFQXVHSTtBQUNJLE1BQUEsT0FBTyxFQUFFVixhQUFhLENBQUNVLElBQWQsQ0FBbUIsSUFBbkIsRUFBeUIsR0FBekIsQ0FEYjtBQUVJLE1BQUEsU0FBUyxFQUFDLFFBRmQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsV0F2R0osRUE2R0k7QUFDSSxNQUFBLE9BQU8sRUFBRVYsYUFBYSxDQUFDVSxJQUFkLENBQW1CLElBQW5CLEVBQXlCLEdBQXpCLENBRGI7QUFFSSxNQUFBLFNBQVMsRUFBQyxVQUZkO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFdBN0dKLEVBbUhJO0FBQ0ksTUFBQSxTQUFTLEVBQUMsc0JBRGQ7QUFFSSxNQUFBLE9BQU8sRUFBRSxLQUFLSCxTQUZsQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxXQW5ISixDQUxGLENBREY7QUFpSUg7O0FBbFE4Qjs7ZUFxUXBCekIsVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgbWF0aCBmcm9tICdtYXRoanMnO1xuXG5jbGFzcyBDYWxjdWxhdG9yIGV4dGVuZHMgQ29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBkaXNwbGF5OiAnMCcsICAgICAgICAgIC8vTnVtYmVyIHNob3duIG9uIHRoZSBzY3JlZW5cbiAgICAgICAgICAgIHRvdGFsOiAnMCcsICAgICAgICAgICAgLy9SZXN1bHQgb2YgcHJldmlvdXMgb3BlcmF0aW9uc1xuICAgICAgICAgICAgb3BlcmF0b3I6IG51bGwsICAgICAgICAvL0N1cnJlbnQgb3BlcmF0aW9uXG4gICAgICAgICAgICBkaXNwbGF5aW5nVG90YWw6IHRydWUgIC8vU2VsZiBleHBsYW5hdG9yeSBmbGFnXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpbnB1dE51bWJlciggdmFsdWUgKXtcblxuICAgICAgICAvKlxuICAgICAgICAgICAgSWYgdGhlIHByZXZpb3VzIG51bWJlciBzaG93biBpbiB0aGUgZGlzcGxheSBzY3JlZW5cbiAgICAgICAgICAgIHdhcyBhIHJlc3VsdCAoYSB0b3RhbCksIHRoZSBuZXcgaW5wdXQgbnVtYmVyIHJlcGxhY2VzIGl0LlxuICAgICAgICAgICAgT3RoZXJ3aXNlLCB0aGUgbmV3IGlucHV0IG51bWJlciBpcyBhZGRlZFxuICAgICAgICAgICAgYXMgYSBuZXcgZGlnaXQgdG8gaXQuXG4gICAgICAgICovXG4gICAgICAgIGxldCBkaXNwbGF5ID0gdmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgaWYoIXRoaXMuc3RhdGUuZGlzcGxheWluZ1RvdGFsIHx8IHRoaXMuc3RhdGUuZGlzcGxheSAhPT0gJzAnKXtcblxuICAgICAgICB9XG4gICAgICAgICAgICBzdHJpbmdlcmVkTnVtYmVyIDogdGhpcy5zdGF0ZS5kaXNwbGF5ICsgc3RyaW5nZXJlZE51bWJlcjtcblxuICAgICAgICAvKlxuICAgICAgICAgICAgSWYgdGhlIHByZXZpb3VzIHNob3duIG51bWJlciwgdGhlIG5ldyBpbnB1dCBudW1iZXJcbiAgICAgICAgICAgIGFuZCB0aGUgc3RvcmVkIHJlc3VsdCBlcXVhbHMgdG8gMCwgdGhlbiB0aGUgY29tcG9uZW50XG4gICAgICAgICAgICBhc3N1bWVzIHRoZSBkaXNwbGF5IGlzIHNob3dpbmcgYSByZXN1bHQ7XG4gICAgICAgICovXG4gICAgICAgIGxldCBkaXNwbGF5aW5nVG90YWwgPVxuICAgICAgICAgICAgdGhpcy5zdGF0ZS50b3RhbCA9PT0gJzAnICYmXG4gICAgICAgICAgICB0aGlzLnN0YXRlLmRpc3BsYXkgPT09ICcwJyAmJlxuICAgICAgICAgICAgc3RyaW5nZXJlZE51bWJlciA9PT0gJzAnO1xuXG4gICAgICAgIC8qXG4gICAgICAgICAgICBUaGUgbmV3IGlucHV0IG51bWJlciBpcyBhZGRlZCBhcyBhIG5ldyBkaWdpdFxuICAgICAgICAgICAgb25seSBpZiB0aGVyZSdzIGF2YWlsYWJsZSBzcGFjZSBvbiB0aGUgZGlzcGxheS5cbiAgICAgICAgKi9cbiAgICAgICAgZGlzcGxheSA9IGRpc3BsYXkuc3BsaXQoJy4nKS5qb2luKCkubGVuZ3RoIDw9IDExID9cbiAgICAgICAgICAgIGRpc3BsYXkgOiB0aGlzLnN0YXRlLmRpc3BsYXk7XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBkaXNwbGF5OiBkaXNwbGF5LFxuICAgICAgICAgICAgZGlzcGxheWluZ1RvdGFsOiBkaXNwbGF5aW5nVG90YWxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgaW5wdXRQb2ludCgpe1xuXG4gICAgICAgIGxldCBkaXNwbGF5ID0gdGhpcy5zdGF0ZS5kaXNwbGF5O1xuXG4gICAgICAgIGlmIChkaXNwbGF5LmluZGV4T2YoJy4nKSA8IDApIHtcbiAgICAgICAgICAgIGRpc3BsYXkgKz0gJy4nO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBkaXNwbGF5OiB0aGlzLnN0YXRlLmRpc3BsYXlpbmdUb3RhbCA/ICcwLicgOiBkaXNwbGF5LFxuICAgICAgICAgICAgZGlzcGxheWluZ1RvdGFsOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpbnB1dE9wZXJhdG9yKG9wZXJhdG9yKXtcblxuICAgICAgICBsZXQgZGlzcGxheTtcblxuICAgICAgICBsZXQgcHJldmlvdXNSZXN1bHQgPSB0aGlzLnN0YXRlLm9wZXJhdG9yID9cbiAgICAgICAgICAgIG1hdGguZXZhbCh0aGlzLnN0YXRlLnRvdGFsICsgdGhpcy5zdGF0ZS5vcGVyYXRvciArIHRoaXMuc3RhdGUuZGlzcGxheSk6XG4gICAgICAgICAgICB0aGlzLnN0YXRlLnRvdGFsO1xuXG4gICAgICAgIGxldCB0b3RhbCA9IHRoaXMuc3RhdGUub3BlcmF0b3IgJiYgIXRoaXMuc3RhdGUuZGlzcGxheWluZ1RvdGFsID9cbiAgICAgICAgICAgIHByZXZpb3VzUmVzdWx0LnRvU3RyaW5nKCkgOlxuICAgICAgICAgICAgdGhpcy5zdGF0ZS5kaXNwbGF5O1xuXG4gICAgICAgIGlmIChpc05hTihwcmV2aW91c1Jlc3VsdCkpe1xuICAgICAgICAgICAgZGlzcGxheSA9ICdFcnJvcic7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgZGlzcGxheSA9IHRvdGFsLnN1YnN0cigwLCAxMSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGRpc3BsYXksXG4gICAgICAgICAgICB0b3RhbDogdG90YWwsXG4gICAgICAgICAgICBvcGVyYXRvcjogb3BlcmF0b3IgPT09ICc9JyA/IG51bGwgOiBvcGVyYXRvcixcbiAgICAgICAgICAgIGRpc3BsYXlpbmdUb3RhbDogdHJ1ZVxuICAgICAgICB9KTtcbiAgICB9XG5cblxuICAgIGNsZWFyKHZhbHVlKXtcbiAgICAgICAgaWYgKHZhbHVlID09PSAnYWxsJykge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogJzAnLFxuICAgICAgICAgICAgICAgIHRvdGFsOiAnMCcsXG4gICAgICAgICAgICAgICAgb3BlcmF0b3I6IG51bGwsXG4gICAgICAgICAgICAgICAgZGlzcGxheWluZ1RvdGFsOiB0cnVlXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9ZWxzZSBpZiAodmFsdWUgPT09ICdlbnRyeScpe1xuXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiAnMCdcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH1lbHNlIGlmICh2YWx1ZSA9PT0gJ2NoYXJhY3RlcicgJiYgdGhpcy5zdGF0ZS5kaXNwbGF5ICE9PSAnMCcpe1xuXG4gICAgICAgICAgICBsZXQgZGlzcGxheSA9IHRoaXMuc3RhdGUuZGlzcGxheS5zdWJzdHIoMCwgdGhpcy5zdGF0ZS5kaXNwbGF5Lmxlbmd0aCAtIDEpO1xuXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0aGlzLnN0YXRlLmRpc3BsYXkubGVuZ3RoID4gMSAmJiAhaXNOYU4oZGlzcGxheSkgPyBkaXNwbGF5IDogJzAnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNob3dBYm91dCgpe1xuICAgICAgICBhbGVydCgnXFxuQ2FsY3VsYXRvcjpcXG5NYWRlIHdpdGgg4pmlIGJ5IEhlcm1hbiBTY2htaWR0XFxuJyk7XG4gICAgfVxuXG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgaW5wdXROdW1iZXIsXG4gICAgICAgICAgICBpbnB1dFBvaW50LFxuICAgICAgICAgICAgaW5wdXRPcGVyYXRvcixcbiAgICAgICAgICAgIGNsZWFyXG4gICAgICAgIH0gPSB0aGlzO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYWxjdWxhdG9yXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRpc3BsYXlcIj5cbiAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5kaXNwbGF5fVxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnV0dG9uc1wiPlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aW5wdXROdW1iZXIuYmluZCh0aGlzLCA3KX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYjdcIj5cbiAgICAgICAgICAgICAgICAgICAgN1xuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtpbnB1dE51bWJlci5iaW5kKHRoaXMsIDgpfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJiOFwiPlxuICAgICAgICAgICAgICAgICAgICA4XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2lucHV0TnVtYmVyLmJpbmQodGhpcywgOSl9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImI5XCI+XG4gICAgICAgICAgICAgICAgICAgIDlcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aW5wdXRPcGVyYXRvci5iaW5kKHRoaXMsICcvJyl9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImRpdmlzaW9uXCI+XG4gICAgICAgICAgICAgICAgICAgIMO3XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInNwZWNpYWwtYnV0dG9uIGNsZWFyLWFsbFwiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2NsZWFyLmJpbmQodGhpcywgJ2FsbCcpfT5cbiAgICAgICAgICAgICAgICAgICAgQ1xuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtpbnB1dE51bWJlci5iaW5kKHRoaXMsIDQpfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJiNFwiPlxuICAgICAgICAgICAgICAgICAgICA0XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2lucHV0TnVtYmVyLmJpbmQodGhpcywgNSl9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImI1XCI+XG4gICAgICAgICAgICAgICAgICAgIDVcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aW5wdXROdW1iZXIuYmluZCh0aGlzLCA2KX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYjZcIj5cbiAgICAgICAgICAgICAgICAgICAgNlxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtpbnB1dE9wZXJhdG9yLmJpbmQodGhpcywgJyonKX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibXVsdGlwbGljYXRpb25cIj5cbiAgICAgICAgICAgICAgICAgICAgw5dcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic3BlY2lhbC1idXR0b24gY2xlYXItZW50cnlcIlxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtjbGVhci5iaW5kKHRoaXMsICdlbnRyeScpfT5cbiAgICAgICAgICAgICAgICAgICAgQ0VcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aW5wdXROdW1iZXIuYmluZCh0aGlzLCAxKX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYjFcIj5cbiAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtpbnB1dE51bWJlci5iaW5kKHRoaXMsIDIpfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJiMlwiPlxuICAgICAgICAgICAgICAgICAgICAyXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2lucHV0TnVtYmVyLmJpbmQodGhpcywgMyl9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImIzXCI+XG4gICAgICAgICAgICAgICAgICAgIDNcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aW5wdXRPcGVyYXRvci5iaW5kKHRoaXMsICctJyl9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInN1YnN0cmFjdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICAtXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInNwZWNpYWwtYnV0dG9uIGRlbGV0ZVwiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2NsZWFyLmJpbmQodGhpcywgJ2NoYXJhY3RlcicpfT5cbiAgICAgICAgICAgICAgICAgICAgREVMXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2lucHV0TnVtYmVyLmJpbmQodGhpcywgMCl9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImIwXCI+XG4gICAgICAgICAgICAgICAgICAgIDBcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aW5wdXRQb2ludC5iaW5kKHRoaXMpfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJwb2ludFwiPlxuICAgICAgICAgICAgICAgICAgICAuXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2lucHV0T3BlcmF0b3IuYmluZCh0aGlzLCAnPScpfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJlcXVhbHNcIj5cbiAgICAgICAgICAgICAgICAgICAgPVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtpbnB1dE9wZXJhdG9yLmJpbmQodGhpcywgJysnKX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYWRkaXRpb25cIj5cbiAgICAgICAgICAgICAgICAgICAgK1xuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzcGVjaWFsLWJ1dHRvbiBhYm91dFwiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuc2hvd0Fib3V0fT5cbiAgICAgICAgICAgICAgICAgICAgQVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDYWxjdWxhdG9yO1xuIl19
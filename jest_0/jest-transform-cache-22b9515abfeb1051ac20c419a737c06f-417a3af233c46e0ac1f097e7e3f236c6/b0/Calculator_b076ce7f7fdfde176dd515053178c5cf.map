{"version":3,"sources":["Calculator.js"],"names":["Calculator","Component","constructor","state","display","total","operator","displayingTotal","inputNumber","value","stringeredNumber","toString","split","join","length","setState","inputPoint","indexOf","inputOperator","nextDisplay","previousResult","math","eval","nextTotal","isNaN","substr","nextOperator","clear","showAbout","alert","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport math from 'mathjs';\n\nclass Calculator extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            display: '0',          //Number shown on the screen\n            total: '0',            //Result of previous operations\n            operator: null,        //Current operation\n            displayingTotal: true  //Self explanatory flag\n        }\n    }\n\n    inputNumber( value ){\n        /*\n            If the previous number shown in the display screen\n            was a result (a total), the new input number replaces it.\n            Otherwise, the new input number is added\n            as a new digit to it.\n        */\n        let stringeredNumber = value.toString();\n        let display =\n            this.state.displayingTotal || this.state.display === '0' ?\n            stringeredNumber : this.state.display + stringeredNumber;\n\n        /*\n            If the previous shown number, the new input number\n            and the stored result equals to 0, then the component\n            assumes the display is showing a result;\n        */\n        let displayingTotal =\n            this.state.total === '0' &&\n            this.state.display === '0' &&\n            stringeredNumber === '0';\n\n        /*\n            The new input number is added as a new digit\n            only if there's available space on the display.\n        */\n        display = display.split('.').join().length <= 11 ?\n            display : this.state.display;\n\n        this.setState({\n            display: display,\n            displayingTotal: displayingTotal\n        });\n    }\n\n    inputPoint(){\n        /*\n            Inputs a point only once.\n            Also, if the previous number on the display was a result (total),\n            clicking the point deletes it, and replaces it by a \"0.\"\n        */\n        let display;\n\n        if (this.state.displayingTotal) {\n            display = '0.';\n        }else{\n            display = this.state.display;\n            display += display.indexOf('.') < 0 ? '.' : '';\n        }\n\n        this.setState({\n            display: display,\n            displayingTotal: false\n        });\n    }\n\n    inputOperator(inputOperator){\n\n        let nextDisplay;\n        let { display, total, operator, displayingTotal } = this.state;\n\n        let previousResult = operator ?\n            math.eval(total + operator + display) : total;\n\n        let nextTotal = operator && !displayingTotal ?\n            previousResult.toString() : display;\n\n        nextDisplay = isNaN(previousResult) ? 'Error' : nextTotal.substr(0, 11);\n\n        nextOperator = inputOperator === '=' ? null : inputOperator;\n\n        this.setState({\n            display: nextDisplay,\n            total: nextTotal,\n            operator: nextOperator,\n            displayingTotal: true\n        });\n    }\n\n\n    clear(value){\n        if (value === 'all') {\n            this.setState({\n                display: '0',\n                total: '0',\n                operator: null,\n                displayingTotal: true\n            });\n\n        }else if (value === 'entry'){\n\n            this.setState({\n                display: '0'\n            });\n\n        }else if (value === 'character' && this.state.display !== '0'){\n\n            let display = this.state.display.substr(0, this.state.display.length - 1);\n\n            this.setState({\n                display: this.state.display.length > 1 && !isNaN(display) ? display : '0'\n            });\n        }\n    }\n\n    showAbout(){\n        alert('\\nCalculator:\\nMade with â™¥ by Herman Schmidt\\n');\n    }\n\n\n    render() {\n\n        const {\n            inputNumber,\n            inputPoint,\n            inputOperator,\n            clear\n        } = this;\n\n        return (\n          <div className=\"calculator\">\n            <div className=\"display\">\n                {this.state.display}\n            </div>\n\n            <div className=\"buttons\">\n                <button\n                    onClick={inputNumber.bind(this, 7)}\n                    className=\"b7\">\n                    7\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 8)}\n                    className=\"b8\">\n                    8\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 9)}\n                    className=\"b9\">\n                    9\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '/')}\n                    className=\"division\">\n                    Ã·\n                </button>\n\n                <button\n                    className=\"special-button clear-all\"\n                    onClick={clear.bind(this, 'all')}>\n                    C\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 4)}\n                    className=\"b4\">\n                    4\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 5)}\n                    className=\"b5\">\n                    5\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 6)}\n                    className=\"b6\">\n                    6\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '*')}\n                    className=\"multiplication\">\n                    Ã—\n                </button>\n\n                <button\n                    className=\"special-button clear-entry\"\n                    onClick={clear.bind(this, 'entry')}>\n                    CE\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 1)}\n                    className=\"b1\">\n                    1\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 2)}\n                    className=\"b2\">\n                    2\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 3)}\n                    className=\"b3\">\n                    3\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '-')}\n                    className=\"substraction\">\n                    -\n                </button>\n\n                <button\n                    className=\"special-button delete\"\n                    onClick={clear.bind(this, 'character')}>\n                    DEL\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 0)}\n                    className=\"b0\">\n                    0\n                </button>\n\n                <button\n                    onClick={inputPoint.bind(this)}\n                    className=\"point\">\n                    .\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '=')}\n                    className=\"equals\">\n                    =\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '+')}\n                    className=\"addition\">\n                    +\n                </button>\n\n                <button\n                    className=\"special-button about\"\n                    onClick={this.showAbout}>\n                    A\n                </button>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Calculator;\n"]}
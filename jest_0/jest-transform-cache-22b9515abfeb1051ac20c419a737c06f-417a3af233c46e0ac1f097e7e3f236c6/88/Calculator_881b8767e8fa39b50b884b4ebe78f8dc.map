{"version":3,"sources":["Calculator.js"],"names":["Calculator","Component","constructor","state","display","total","operator","displayingTotal","inputNumber","value","stringeredNumber","toString","split","join","length","setState","inputPoint","indexOf","inputOperator","nextDisplay","previousResult","math","eval","nextTotal","isNaN","substr","nextOperator","clear","newDisplay","showAbout","alert","render","bind"],"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","sourcesContent":["import React, { Component } from 'react';\nimport math from 'mathjs';\n\nclass Calculator extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            display: '0',          //Number shown on the screen\n            total: '0',            //Result of previous operations\n            operator: null,        //Current operator ( + - * / )\n            displayingTotal: true  //Self explanatory flag\n        }\n    }\n\n    inputNumber( value ){\n        /*\n            If the previous number shown in the display screen\n            was a result (a total), the new input number replaces it.\n            Otherwise, the new input number is added\n            as a new digit to it.\n        */\n        let stringeredNumber = value.toString();\n        let display =\n            this.state.displayingTotal || this.state.display === '0' ?\n            stringeredNumber : this.state.display + stringeredNumber;\n\n        /*\n            If the previous shown number, the new input number\n            and the stored result equals to 0, then the component\n            assumes the display is showing a result;\n        */\n        let displayingTotal =\n            this.state.total === '0' &&\n            this.state.display === '0' &&\n            stringeredNumber === '0';\n\n        /*\n            The new input number is added as a new digit\n            only if there's available space on the display.\n        */\n        display =\n            display.split('.').join().length <= 11 ?\n            display : this.state.display;\n\n        this.setState({\n            display: display,\n            displayingTotal: displayingTotal\n        });\n    }\n\n    inputPoint(){\n        /*\n            Inputs a point only once.\n            Also, if the previous number on the display was a result (total),\n            clicking the point deletes it, and replaces it by a \"0.\"\n        */\n        let display;\n\n        if (this.state.displayingTotal) {\n            display = '0.';\n        }else{\n            display = this.state.display;\n            display += display.indexOf('.') < 0 ? '.' : '';\n        }\n\n        this.setState({\n            display: display,\n            displayingTotal: false\n        });\n    }\n\n    inputOperator(inputOperator){\n\n        let nextDisplay;\n        let { display, total, operator, displayingTotal } = this.state;\n\n        //Gets the results of the previous operation:\n        let previousResult = operator ?\n            math.eval(total + operator + display) : total;\n\n        //Gets the new total:\n        let nextTotal = operator && !displayingTotal ?\n            previousResult.toString() : display;\n\n        //Gets the next number (or value) to show on the display:\n        nextDisplay = isNaN(previousResult) ? 'Error' : nextTotal.substr(0, 11);\n\n        //Gets the next operator symbol ( + - * / ):\n        let nextOperator = inputOperator === '=' ? null : inputOperator;\n\n        //Updates the state:\n        this.setState({\n            display: nextDisplay,\n            total: nextTotal,\n            operator: nextOperator,\n            displayingTotal: true\n        });\n    }\n\n\n    clear(value){\n\n        //Deletes all the values:\n        if (value === 'all') {\n            this.setState({\n                display: '0',\n                total: '0',\n                operator: null,\n                displayingTotal: true\n            });\n\n        //Deletes only the value on the display:\n        }else if (value === 'entry'){\n            this.setState({\n                display: '0'\n            });\n\n        //Deletes only one character on the display:\n        }else if (value === 'character' && this.state.display !== '0'){\n            let display = this.state.display;\n            let newDisplay = display.substr(0, display.length - 1);\n            newDisplay = display.length > 1 && !isNaN(newDisplay) ? newDisplay : '0';\n\n            this.setState({\n                display: newDisplay\n            });\n        }\n    }\n\n\n    showAbout(){\n        //The button \"A\", when clicked shows the \"about\" dialog:\n        alert('\\nCalculator:\\nMade with ♥ by Herman Schmidt\\n');\n    }\n\n\n    render() {\n\n        const {\n            inputNumber,\n            inputPoint,\n            inputOperator,\n            clear\n        } = this;\n\n        return (\n          <div className=\"calculator\">\n            <div className=\"display\">\n                {this.state.display}\n            </div>\n\n            <div className=\"buttons\">\n                <button\n                    onClick={inputNumber.bind(this, 7)}\n                    className=\"b7\">\n                    7\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 8)}\n                    className=\"b8\">\n                    8\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 9)}\n                    className=\"b9\">\n                    9\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '/')}\n                    className=\"division\">\n                    ÷\n                </button>\n\n                <button\n                    className=\"special-button clear-all\"\n                    onClick={clear.bind(this, 'all')}>\n                    C\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 4)}\n                    className=\"b4\">\n                    4\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 5)}\n                    className=\"b5\">\n                    5\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 6)}\n                    className=\"b6\">\n                    6\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '*')}\n                    className=\"multiplication\">\n                    ×\n                </button>\n\n                <button\n                    className=\"special-button clear-entry\"\n                    onClick={clear.bind(this, 'entry')}>\n                    CE\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 1)}\n                    className=\"b1\">\n                    1\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 2)}\n                    className=\"b2\">\n                    2\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 3)}\n                    className=\"b3\">\n                    3\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '-')}\n                    className=\"substraction\">\n                    -\n                </button>\n\n                <button\n                    className=\"special-button delete\"\n                    onClick={clear.bind(this, 'character')}>\n                    DEL\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 0)}\n                    className=\"b0\">\n                    0\n                </button>\n\n                <button\n                    onClick={inputPoint.bind(this)}\n                    className=\"point\">\n                    .\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '=')}\n                    className=\"equals\">\n                    =\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '+')}\n                    className=\"addition\">\n                    +\n                </button>\n\n                <button\n                    className=\"special-button about\"\n                    onClick={this.showAbout}>\n                    A\n                </button>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Calculator;\n"]}
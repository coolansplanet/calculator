{"version":3,"sources":["Calculator.js"],"names":["Calculator","Component","constructor","state","display","total","operator","displayingTotal","inputNumber","value","stringeredNumber","toString","setState","fitsOnDisplay","inputPoint","indexOf","inputOperator","previousResult","math","eval","isNaN","substr","aString","filteredString","pointIndex","slice","length","clear","showAbout","alert","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport math from 'mathjs';\n\nclass Calculator extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            display: '0',\n            total: '0',\n            operator: null,\n            displayingTotal: true\n        }\n    }\n\n    inputNumber( value ){\n\n        /*\n            If the previous number shown in the display screen is\n            a result (a total), the input number replaces it.\n            Otherwise, the input number is added\n            as a new digit to it.\n        */\n        let stringeredNumber = value.toString();\n        let display = this.state.displayingTotal || this.state.display === '0' ?\n            stringeredNumber :\n            this.state.display + stringeredNumber;\n\n        let displayingTotal = this.state.total === '0' &&\n                this.state.display === '0' &&\n                stringeredNumber === '0';\n\n        this.setState({\n            display: this.fitsOnDisplay(display) ? display : this.state.display,\n            displayingTotal: displayingTotal\n        });\n    }\n\n    inputPoint(){\n\n        let display = this.state.display;\n\n        if (display.indexOf('.') < 0) {\n            display += '.';\n        }\n\n        this.setState({\n            display: this.state.displayingTotal ? '0.' : display,\n            displayingTotal: false\n        });\n    }\n\n    inputOperator(operator){\n\n        let display;\n\n        let previousResult = this.state.operator ?\n            math.eval(this.state.total + this.state.operator + this.state.display):\n            this.state.total;\n\n        let total = this.state.operator && !this.state.displayingTotal ?\n            previousResult.toString() :\n            this.state.display;\n\n        if (isNaN(previousResult)){\n            display = 'Error';\n        }else{\n            display = total.substr(0, 11);\n        }\n\n        this.setState({\n            display: display,\n            total: total,\n            operator: operator === '=' ? null : operator,\n            displayingTotal: true\n        });\n    }\n\n    fitsOnDisplay(aString){\n        let filteredString = aString;\n        let pointIndex = filteredString.indexOf('.');\n        filteredString.slice(pointIndex, pointIndex+1);\n\n        return filteredString.length <= 11;\n    }\n\n    clear(value){\n        if (value === 'all') {\n            this.setState({\n                display: '0',\n                total: '0',\n                operator: null,\n                displayingTotal: true\n            });\n\n        }else if (value === 'entry'){\n\n            this.setState({\n                display: '0'\n            });\n\n        }else if (value === 'character' && this.state.display !== '0'){\n\n            let display = this.state.display.substr(0, this.state.display.length - 1);\n\n            this.setState({\n                display: this.state.display.length > 1 && !isNaN(display) ? display : '0'\n            });\n        }\n    }\n\n    showAbout(){\n        alert('\\nCalculator:\\nMade with â™¥ by Herman Schmidt\\n');\n    }\n\n\n    render() {\n\n        const {\n            inputNumber,\n            inputPoint,\n            inputOperator,\n            clear\n        } = this;\n\n        return (\n          <div className=\"calculator\">\n            <div className=\"display\">\n                {this.state.display}\n            </div>\n\n            <div className=\"buttons\">\n                <button\n                    onClick={inputNumber.bind(this, 7)}\n                    className=\"b7\">\n                    7\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 8)}\n                    className=\"b8\">\n                    8\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 9)}\n                    className=\"b9\">\n                    9\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '/')}\n                    className=\"division\">\n                    Ã·\n                </button>\n\n                <button\n                    className=\"special-button clear-all\"\n                    onClick={clear.bind(this, 'all')}>\n                    C\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 4)}\n                    className=\"b4\">\n                    4\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 5)}\n                    className=\"b5\">\n                    5\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 6)}\n                    className=\"b6\">\n                    6\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '*')}\n                    className=\"multiplication\">\n                    Ã—\n                </button>\n\n                <button\n                    className=\"special-button clear-entry\"\n                    onClick={clear.bind(this, 'entry')}>\n                    CE\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 1)}\n                    className=\"b1\">\n                    1\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 2)}\n                    className=\"b2\">\n                    2\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 3)}\n                    className=\"b3\">\n                    3\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '-')}\n                    className=\"substraction\">\n                    -\n                </button>\n\n                <button\n                    className=\"special-button delete\"\n                    onClick={clear.bind(this, 'character')}>\n                    DEL\n                </button>\n\n                <button\n                    onClick={inputNumber.bind(this, 0)}\n                    className=\"b0\">\n                    0\n                </button>\n\n                <button\n                    onClick={inputPoint.bind(this)}\n                    className=\"point\">\n                    .\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '=')}\n                    className=\"equals\">\n                    =\n                </button>\n\n                <button\n                    onClick={inputOperator.bind(this, '+')}\n                    className=\"addition\">\n                    +\n                </button>\n\n                <button\n                    className=\"special-button about\"\n                    onClick={this.showAbout}>\n                    A\n                </button>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Calculator;\n"]}